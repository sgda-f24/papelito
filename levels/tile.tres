[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://4556cu3qfq58"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6a22x"]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_pd0eg"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_8dfg3"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_6hmko"]
output_port_for_preview = 0
size = Vector2(480, 400)
expression = "if to 
lerp = (value - from) / (to - from); "

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_k84he"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_8duwu"]
constant = 0.125

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// VectorCompose:3
	float n_in3p0 = 0.00000;
	float n_in3p1 = 0.00000;
	float n_in3p2 = 0.00000;
	float n_in3p3 = 0.00000;
	vec4 n_out3p0 = vec4(n_in3p0, n_in3p1, n_in3p2, n_in3p3);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
graph_offset = Vector2(-993.087, 493.668)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_6a22x")
nodes/fragment/2/position = Vector2(-920, 200)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorCompose_pd0eg")
nodes/fragment/3/position = Vector2(200, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_8dfg3")
nodes/fragment/4/position = Vector2(-560, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeExpression_6hmko")
nodes/fragment/6/position = Vector2(-340, 460)
nodes/fragment/6/size = Vector2(480, 400)
nodes/fragment/6/input_ports = "0,0,from;1,0,to;2,0,value;"
nodes/fragment/6/output_ports = "0,0,lerp;"
nodes/fragment/6/expression = "if to 
lerp = (value - from) / (to - from); "
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatConstant_k84he")
nodes/fragment/7/position = Vector2(-700, 560)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatConstant_8duwu")
nodes/fragment/8/position = Vector2(-740, 680)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 3, 0, 0, 0, 7, 0, 6, 0, 8, 0, 6, 1, 4, 0, 6, 2)
